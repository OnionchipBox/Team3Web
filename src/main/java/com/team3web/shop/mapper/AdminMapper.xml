<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.team3web.shop.mapper.AdminMapper">

	<!-- 등급 변경(사용자) -->
	<update id="updateUserVerify" parameterType="UserVO">
    	UPDATE shop_user
    	SET VERIFY = 'USER'
    	WHERE username = #{username}
	</update>
	
	<!-- 판매자 등록해제 -->
	<delete id="forceDeleteSeller" parameterType="UserVO">
		DELETE FROM shop_seller
    	WHERE username = #{username}
	</delete>
	
	<!-- 강제 회원탈퇴 -->
	<delete id="forceDeleteUser" parameterType="UserVO">
		DELETE FROM shop_user
    	WHERE username = #{username}
	</delete>
	
	<!-- 제품 삭제 -->
	<delete id="forceDeleteProduct" parameterType="ProductVO">
		DELETE FROM shop_products
		WHERE seller_code = #{sellerCode} OR productId = #{productId}
	</delete>
	<delete id="DeleteProductAll" parameterType="ProductVO">
		DELETE FROM shop_products
		WHERE seller_code = #{sellerCode}
	</delete>
	
	<!-- 회원 목록 가져오기 (페이징) -->
	<select id="getUsersByPage" parameterType="map" resultType="UserVO">
    SELECT *
    FROM (
        SELECT
            ROWNUM AS RNUM,
            A.*
        FROM (
            SELECT *
            FROM shop_user
            WHERE 1=1
            <if test="search != null and !search.isEmpty()">
                AND (username LIKE '%' || #{search, jdbcType=VARCHAR} || '%' OR name LIKE '%' || #{search, jdbcType=VARCHAR})
            </if>
            ORDER BY username
        ) A
        WHERE ROWNUM &lt;= #{end}
    )
    WHERE RNUM &gt;= #{start}
</select>



	<!-- 총 회원 수 가져오기 (검색 포함) -->
	<select id="getTotalUsers" parameterType="map" resultType="int">
    	SELECT COUNT(*)
    	FROM shop_user
    	<if test="search != null and !search.isEmpty()">
        	WHERE (name LIKE '%' || #{search, jdbcType=VARCHAR} || '%' OR username LIKE '%' || #{search, jdbcType=VARCHAR})
    	</if>
	</select>
	
	<!-- 검색된 회원 목록 가져오기 (페이징) -->
	<select id="getSearchedUsersByPage" parameterType="map" resultType="UserVO">
    SELECT *
    FROM (
        SELECT
            ROWNUM AS RNUM,
            A.*
        FROM (
            SELECT *
            FROM shop_user
            WHERE 1=1
            <if test="search != null and !search.isEmpty()">
                AND (name LIKE '%' || #{search, jdbcType=VARCHAR} || '%' OR username LIKE '%' || #{search, jdbcType=VARCHAR})
            </if>
            ORDER BY username
        ) A
        WHERE ROWNUM &lt;= #{end}
    )
    WHERE RNUM &gt;= #{start}
	</select>


	<!-- 총 검색된 회원 수 가져오기 -->
	<select id="getTotalSearchedUsers" parameterType="map" resultType="int">
    	SELECT COUNT(*)
    	FROM shop_user
    	WHERE 
    	<if test="search != null and !search.isEmpty()">
        	(name LIKE '%' || #{search, jdbcType=VARCHAR} || '%' OR username LIKE '%' || #{search, jdbcType=VARCHAR} || '%')
    	</if>
	</select>
	
	<!-- 판매업체 관련 -->
	
	<!-- 판매업체 목록 가져오기 (페이징) -->
	<select id="getSellerByPage" parameterType="map" resultType="SellerVO">
    SELECT *
    FROM (
        SELECT
            ROWNUM AS RNUM,
            A.*
        FROM (
            SELECT *
            FROM shop_seller
            WHERE 1=1
            <if test="search != null and !search.isEmpty()">
                AND (username LIKE '%' || #{search, jdbcType=VARCHAR} || '%' OR seller_name LIKE '%' || #{search, jdbcType=VARCHAR})
            </if>
            ORDER BY username
        ) A
        WHERE ROWNUM &lt;= #{end}
    )
    WHERE RNUM &gt;= #{start}
	</select>

	<!-- 총 판매업체 수 가져오기 (검색 포함) -->
	<select id="getTotalSeller" parameterType="map" resultType="int">
    	SELECT COUNT(*)
    	FROM shop_seller
    	<if test="search != null and !search.isEmpty()">
        	WHERE (username LIKE '%' || #{search, jdbcType=VARCHAR} || '%' OR seller_name LIKE '%' || #{search, jdbcType=VARCHAR})
    	</if>
	</select>
	
	<!-- 검색된 판매업체 목록 가져오기 (페이징) -->
	<select id="getSearchedSellerByPage" parameterType="map" resultType="SellerVO">
    SELECT *
    FROM (
        SELECT
            ROWNUM AS RNUM,
            A.*
        FROM (
            SELECT *
            FROM shop_seller
            WHERE 1=1
            <if test="search != null and !search.isEmpty()">
                AND (username LIKE '%' || #{search, jdbcType=VARCHAR} || '%' OR seller_name LIKE '%' || #{search, jdbcType=VARCHAR})
            </if>
            ORDER BY username
        ) A
        WHERE ROWNUM &lt;= #{end}
    )
    WHERE RNUM &gt;= #{start}
	</select>
	
	<!-- 총 검색된 판매업체 수 가져오기 -->
	<select id="getTotalSearchedSeller" parameterType="map" resultType="int">
    	SELECT COUNT(*)
    	FROM shop_seller
    	WHERE 
    	<if test="search != null and !search.isEmpty()">
        	(username LIKE '%' || #{search, jdbcType=VARCHAR} || '%' OR seller_name LIKE '%' || #{search, jdbcType=VARCHAR} || '%')
    	</if>
	</select>
	
	<!-- 제품 관련 -->
	
	<!-- 제품 목록 가져오기 (페이징) -->
	<select id="getProductsByPage" parameterType="map" resultType="ProductVO">
    SELECT *
    FROM (
        SELECT
            ROWNUM AS RNUM,
            A.*
        FROM (
            SELECT *
            FROM shop_products
            WHERE 1=1
            <if test="search != null and !search.isEmpty()">
                AND (name LIKE '%' || #{search, jdbcType=VARCHAR})
            </if>
            ORDER BY productid
        ) A
        WHERE ROWNUM &lt;= #{end}
    )
    WHERE RNUM &gt;= #{start}
	</select>

	<!-- 총 제품 수 가져오기 (검색 포함) -->
	<select id="getTotalProducts" parameterType="map" resultType="int">
    	SELECT COUNT(*)
    	FROM shop_products
    	<if test="search != null and !search.isEmpty()">
        	WHERE (name LIKE '%' || #{search, jdbcType=VARCHAR})
    	</if>
	</select>
	
	<!-- 검색된 제품 목록 가져오기 (페이징) -->
	<select id="getSearchedProductsByPage" parameterType="map" resultType="ProductVO">
    SELECT *
    FROM (
        SELECT
            ROWNUM AS RNUM,
            A.*
        FROM (
            SELECT *
            FROM shop_products
            WHERE 1=1
            <if test="search != null and !search.isEmpty()">
                AND (name LIKE '%' || #{search, jdbcType=VARCHAR})
            </if>
            ORDER BY productid
        ) A
        WHERE ROWNUM &lt;= #{end}
    )
    WHERE RNUM &gt;= #{start}
	</select>
	
	<!-- 총 검색된 제품 수 가져오기 -->
	<select id="getTotalSearchedProducts" parameterType="map" resultType="int">
    	SELECT COUNT(*)
    	FROM shop_products
    	WHERE 
    	<if test="search != null and !search.isEmpty()">
        	(name LIKE '%' || #{search, jdbcType=VARCHAR} || '%')
    	</if>
	</select>
	
	<!-- 공지 관련 -->
	
	<!-- 사용자 메인 최신공지 목록 5개 보기 -->
	<select id="gonglist" resultType="NoticeVO">
		select * from (
		select gno,gtitle,gdate
		from shop_notice order by gno desc)
		where rownum &lt; 6
	</select>


	<!-- 공지 조회수 증가 -->
	<update id="gonghit">
		update shop_notice set ghit=ghit+1
		where gno=#{gno}
	</update>

	<!-- 공지내용보기 -->
	<select id="gongcont" resultType="NoticeVO">
		select * from shop_notice where gno=#{gno}
	</select>
	
	<!-- 공지사항 저장 -->
	<insert id="in_gongji" parameterType="NoticeVO">
		insert into
		shop_notice(gno,gname,gtitle,gpwd,gcont,ghit,gdate)
		values(notice_no_seq.nextval,#{gname},#{gtitle},#{gpwd},#{gcont},0,sysdate)
	</insert>


	<!-- 검색 전후 레코드 개수 -->
	<select id="gongji_count" resultType="int">
		select count(gno) from shop_notice
		<where>
			<if test="find_field == ''">
				<!-- 검색조건이 없어서 총레코드 개수 -->
			</if>
			<if test="find_field == 'gtitle'">
				<!-- 검색 조건이 제목인 경우 -->
				gtitle like #{find_name} <!-- like는 오라클 검색 연산자 -->
			</if>
			<if test="find_field == 'gcont'"><!-- 검색 조건이 공지 내용인 경우 -->
				gcont like #{find_name}
			</if>
		</where>
	</select>


	<!-- 검색전후 공지목록 -->
	<select id="gongji_list" resultType="NoticeVO">
		select * from
		(select rowNum
		rNum,gno,gname,gtitle,ghit,gdate
		from
		(select * from shop_notice
		<where>
			<if test="find_field == ''"> <!-- 검색조건이 없어서 총레코드 개수 -->
			</if>
			<if test="find_field == 'gtitle'"><!-- 검색 조건이 제목인 경우 -->
				gtitle like #{find_name} <!-- like는 오라클 검색 연산자 -->
			</if>
			<if test="find_field == 'gcont'"> <!-- 관리자 공지 내용인 경우 -->
				gcont like #{find_name}
			</if>
		</where>
		order by gno desc))
		where rNum &gt;= #{startrow} and rNum &lt;=
		#{endrow}
		<!-- &gt;은 ~보다 크다(>), &lt;은 ~보다 작다(<) -->
	</select>


	<!-- 관리자 공지 내용+수정폼 -->
	<select id="gongji_cont" resultType="NoticeVO">
		select * from shop_notice where gno=#{no}
	</select>


	<!-- 관리자 공지 수정 -->
	<update id="gongji_edit">
		update shop_notice set gname=#{gname},
		gtitle=#{gtitle},gcont=#{gcont}
		where gno=#{gno}
	</update>

	<!-- 관리자 공지삭제 -->
	<delete id="gongji_del">
		delete from shop_notice where gno=#{no}
	</delete>

</mapper>
